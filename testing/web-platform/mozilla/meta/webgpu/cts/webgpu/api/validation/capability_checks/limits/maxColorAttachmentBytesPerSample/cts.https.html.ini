[cts.https.html?q=webgpu:api,validation,capability_checks,limits,maxColorAttachmentBytesPerSample:beginRenderPass,at_over:*]
  implementation-status: backlog
  expected:
    if os == "win": TIMEOUT
    if os == "linux" and debug: TIMEOUT
    if os == "mac" and debug: TIMEOUT
    if os == "mac" and not debug: [OK, TIMEOUT]
  [:limitTest="atDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="r8unorm"]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rg16float"]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rg8unorm"]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba16float"]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba8unorm"]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="r8unorm"]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rg16float"]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rg8unorm"]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba16float"]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba8unorm"]

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win": [FAIL, TIMEOUT, NOTRUN]
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="r8unorm"]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rg16float"]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rg8unorm"]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba16float"]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba8unorm"]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win": FAIL

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "win" and not debug: FAIL

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba16float"]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and not debug: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,capability_checks,limits,maxColorAttachmentBytesPerSample:createRenderBundle,at_over:*]
  implementation-status: backlog
  expected:
    if os == "win": [OK, TIMEOUT]
    if os == "linux" and debug: TIMEOUT
    if os == "mac" and debug: TIMEOUT
    if os == "mac" and not debug: [OK, TIMEOUT]
  [:limitTest="atDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: FAIL

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win": [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win": [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win": [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win": [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win": [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win": [PASS, FAIL]

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="r8unorm"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rg8unorm"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=1;interleaveFormat="rgba8unorm"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="r8unorm"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rg8unorm"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,capability_checks,limits,maxColorAttachmentBytesPerSample:createRenderPipeline,at_over:*]
  implementation-status: backlog
  expected: TIMEOUT
  [:limitTest="atDefault";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="r8unorm"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rg16float"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rg8unorm"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rgba16float"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rgba8unorm"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="r8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rg8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="r8unorm"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rg16float"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rg8unorm"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rgba16float"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rgba8unorm"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="r8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rg8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win": FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win": FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win": FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win": FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win": FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="r8unorm"]

  [:limitTest="atDefault";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rg16float"]

  [:limitTest="atDefault";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rg8unorm"]

  [:limitTest="atDefault";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rgba16float"]

  [:limitTest="atDefault";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rgba8unorm"]

  [:limitTest="atDefault";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="r8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rg8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="r8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rg8unorm"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="r8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rg8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win": [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="r8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rg16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rg8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rgba16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="r8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rg16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rg8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rgba16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="r8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rg16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rg8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rgba16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="r8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rg16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rg8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rgba16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="atMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="r8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rg16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rg8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rgba16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="r8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rg16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rg8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rgba16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="r8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rg16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rg8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rgba16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="r8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rg16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rg8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rgba16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="r8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rg16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rg8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rgba16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="r8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rg16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rg8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rgba16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="r8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rg16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rg8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rgba16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="r8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rg16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rg8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rgba16float"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: [TIMEOUT, NOTRUN]

  [:limitTest="underDefault";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="r8unorm"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rg16float"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rg8unorm"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rgba16float"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;sampleCount=1;interleaveFormat="rgba8unorm"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="r8unorm"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rg16float"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rg8unorm"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rgba16float"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=false;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="underDefault";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rg16float"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rg8unorm"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rgba16float"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;sampleCount=1;interleaveFormat="rgba8unorm"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=true;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="underDefault";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="underDefault";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="underDefault";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="underDefault";testValueName="overLimit";async=false;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:limitTest="underDefault";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;sampleCount=1;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="r8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rg16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rg8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rgba16float"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;sampleCount=4;interleaveFormat="rgba8unorm"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL
