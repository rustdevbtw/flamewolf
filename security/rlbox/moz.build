# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

include("rlbox.mozbuild")

RLBoxLibrary("rlbox")

LOCAL_INCLUDES += [
    "/third_party/simde/",
    "/third_party/wasm2c/wasm2c/",
]

EXPORTS += [
    "/third_party/wasm2c/wasm2c/wasm-rt.h",
]

FINAL_LIBRARY = "xul"

# Allow compiler warnings both in wasm compiles (because they're third-party
# libraries), and C compiles (because they're code generated by wasm2c).
AllowCompilerWarnings()

WASM_DEFINES["MOZILLA_CLIENT"] = True

if CONFIG["MOZ_WASM_SANDBOXING_HUNSPELL"]:
    include("/extensions/spellcheck/hunspell/src/sources.mozbuild")
    WASM_SOURCES += [
        "/extensions/spellcheck/hunspell/src/" + s for s in hunspell_sources
    ]
    if CONFIG["MOZ_WASI_EMULATED_CLOCK"]:
        WASM_DEFINES["_WASI_EMULATED_PROCESS_CLOCKS"] = True
        WASM_LIBS += ["wasi-emulated-process-clocks"]
    LOCAL_INCLUDES += [
        "/extensions/spellcheck/hunspell/glue",
        "/extensions/spellcheck/hunspell/src",
    ]

if CONFIG["MOZ_WASM_SANDBOXING_GRAPHITE"]:
    include("/gfx/graphite2/src/sources.mozbuild")
    WASM_SOURCES += ["/gfx/graphite2/src/" + s for s in graphite_sources]
    WASM_SOURCES += [
        "/gfx/graphite2/src/call_machine.cpp",
    ]
    for k, v in graphite_defines:
        WASM_DEFINES[k] = v
    LOCAL_INCLUDES += ["/gfx/graphite2/src"]

if CONFIG["MOZ_WASM_SANDBOXING_OGG"]:
    include("/media/libogg/sources.mozbuild")
    WASM_SOURCES += ["/media/libogg/" + s for s in ogg_sources]
    LOCAL_INCLUDES += ["/media/libogg"]

if CONFIG["MOZ_WASM_SANDBOXING_EXPAT"]:
    include("/parser/expat/lib/sources.mozbuild")
    WASM_SOURCES += ["/parser/expat/lib/" + s for s in expat_sources]
    for k, v in expat_defines:
        WASM_DEFINES[k] = v
    LOCAL_INCLUDES += ["/parser/expat/lib/"]

if CONFIG["MOZ_WASM_SANDBOXING_WOFF2"]:
    include("/modules/woff2/sources.mozbuild")
    WASM_SOURCES += ["/modules/woff2/" + s for s in woff2_sources]
    LOCAL_INCLUDES += ["/modules/woff2/include"]
